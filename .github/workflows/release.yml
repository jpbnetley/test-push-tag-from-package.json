# This is a basic workflow to help you get started with Actions

name: Build and deploy [dev / prod]
run-name: Tag

# Controls when the action will run.
on:
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 
      - main

env:
  node_version: 22

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "install"
  
  build-and-publish-tag:
    name: Build and publish
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read

    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v4

    - name: Use Node.js ${{ env.node_version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.node_version }}
        cache: 'pnpm'

    - name: Get version
      id: package
      run: |
        version=$(node -p "require('./package.json').version")
        echo "version=$version" >> $GITHUB_OUTPUT

    - name: Get remote tag
      id: tag
      run: git ls-remote --exit-code --tags origin $${{ steps.package.outputs.package.version }} && echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT || echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT

    - name: Set git user
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Push tags
      if: steps.tag.outputs.TAG_EXISTS == 'false'
      run: |
        git tag $${{ steps.package.outputs.package.version }}
        git push origin $${{ steps.package.outputs.package.version }}